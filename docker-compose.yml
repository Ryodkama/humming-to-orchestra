version: "3.7"

services:
  ai-api:
    container_name: python-backend
    env_file: ./backend/ai-api/.env
    build: ./backend/ai-api/.
    volumes:
      - ./backend/ai-api:/code/
      - static_volume:/code/staticfiles # <-- bind the static volume
    stdin_open: true
    tty: true
    command: gunicorn --bind :8000 config.wsgi:application
    networks:
      - backend_network
    environment:
      - CHOKIDAR_USEPOLLING=true
      - DJANGO_SETTINGS_MODULE=config.local_settings
    depends_on:
      - db
  backend-server:
    container_name: nginx_back
    build:
      context: ./backend/nginx/.
      dockerfile: Dockerfile.dev
    volumes:
      - static_volume:/code/staticfiles # <-- bind the static volume
    ports:
      - "8080:80"
    depends_on:
      - ai-api
    networks:
      - backend_network

  db:
    build: ./mysql
    # platform: linux/x86_64
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: humming2orchestra
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      TZ: "Asia/Tokyo"
    volumes:
      - ./mysql_volume:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - backend_network
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD

  web-front:
    image: node
    volumes:
      - ./frontend/web-front:/home/app/frontend
    ports:
      - 3000:3000
    working_dir: /home/app/frontend
    command:
      [
        bash,
        -c,
        yarn upgrade --no-progress --network-timeout 1000000 && yarn run dev,
      ]
    networks:
      - frontend_network
  frontend-server:
    container_name: nginx_frontend
    build:
      context: ./frontend/nginx/.
      dockerfile: Dockerfile.dev
    ports:
      - "80:80"
    depends_on:
      - web-front
    networks:
      - frontend_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    platform: linux/x86_64
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_USER=user
      - PMA_PASSWORD=password
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    ports:
      - 8888:80
    networks:
      - backend_network

  api:
    build:
      context: ./backend/login-api/.
      dockerfile: Dockerfile.dev
    ports:
      - 90:90
    volumes:
      - ./backend/login-api/api:/go/src/api/
    command: >
      sh -c "air"
    depends_on:
      db:
        condition: service_healthy
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: humming2orchestra
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    # links:
    #   - "smtp"
    tty: true
    networks:
      - backend_network

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge
volumes:
  static_volume:
